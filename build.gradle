ext {
    libraries = [
            slf4j    : '1.7.25',
            javassist: '3.26.0-GA',
            cglib    : '3.3.0',
            objenesis: '3.1',
            snakeyaml: '1.25',
            hessian  : '4.0.63',
            joda     : '2.10.5',
            jackson  : '2.10.2',
            curator  : '4.2.0',
            netty    : '4.1.45.Final',
            junit    : '5.6.0'
    ]
}
allprojects {
    group = 'com.github.bdqfork'
    version = '0.1.1'
}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                pom {
                    name = project.name
                    url = 'https://github.com/bdqfork/Hamal'
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'bdqfork'
                            email = 'bdqsky@163.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:bdqfork/Hamal.git'
                        developerConnection = 'scm:git:git@github.com:bdqfork/Hamal.git'
                        url = 'https://github.com/bdqfork/Hamal'
                    }
                }

            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username hasProperty('ossrh_key') ? ossrh_key : ''
                    password hasProperty('ossrh_pass') ? ossrh_pass : ''
                }
                    
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

}